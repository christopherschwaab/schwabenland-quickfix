# Copyright 2013 Marc-Antoine Perennou <Marc-Antoine@Perennou.com>
# Distributed under the terms of the GNU General Public License v2

export_exlib_phases src_prepare src_configure src_install

SUMMARY="A safe, concurrent, practical language"
DESCRIPTION="
Rust is a curly-brace, block-structured expression language. It visually resembles the C language
family, but differs significantly in syntactic and semantic details. Its design is oriented toward
concerns of “programming in the large”, that is, of creating and maintaining boundaries – both
abstract and operational – that preserve large-system integrity, availability and concurrency.
"

# Get these from src/snapshots.txt
myexparam date=
exparam -v RUST_DATE date
myexparam rev=
exparam -v RUST_REV rev
myexparam hash=
exparam -v RUST_HASH hash

MY_PNV="${PN}c-${PV}"

DOWNLOADS="http://static.rust-lang.org/dist/${MY_PNV}-src.tar.gz"

SNAPSHOT="${PN}-stage0-${RUST_DATE}-${RUST_REV}-linux-x86_64-${RUST_HASH}"
DOWNLOADS+=" http://static.rust-lang.org/stage0-snapshots/${SNAPSHOT}.tar.bz2"

HOMEPAGE="http://www.rust-lang.org/"
LICENCES="MIT Apache-2.0"
SLOT="0"
# TODO: add a bootstrap option (--local-rust-root) when this issue is closed
# https://github.com/rust-lang/rust/issues/16402
MYOPTIONS="
    doc
    dev-channel [[ description = [ use the development channel instead of the stable one ] ]]
"

DEPENDENCIES="
    build:
        dev-lang/llvm:=[>=3.7.1][static]
        dev-lang/perl:*[>=5.0]
        dev-lang/python:*[>=2.6&<3]
        sys-devel/gcc:*[>=4.4]
        sys-devel/make[>=3.82]
        bootstrap? ( dev-util/patchelf )
"

WORK="${WORKBASE}/${MY_PNV}"

# Tests need gdb which does not work under sydbox
RESTRICT="test"

rust_src_prepare() {
    local target=$(exhost --target)

    # rust embeds several dependencies with hardcoded calls to unprefixed tools
    # This is mostly copied from chromium.exlib
    local dir=${WORKBASE}/symlinked-build-tools
    edo mkdir -p ${dir}
    edo ln -s /usr/${target}/bin/${target}-pkg-config ${dir}/pkg-config
    edo ln -s /usr/${target}/bin/${target}-ar ${dir}/ar
    edo ln -s /usr/${target}/bin/${target}-gcc ${dir}/gcc
    edo ln -s /usr/${target}/bin/${target}-cc ${dir}/cc
    edo ln -s /usr/${target}/bin/${target}-ld ${dir}/ld
    export PATH="${PATH}:${dir}"

    edo sed -e 's:bin/FileCheck:libexec/llvm/FileCheck:' -i configure
    edo sed -e 's:sudo -u "$$SUDO_USER"::g' -i mk/install.mk

    # Hijacked from ghc build by Santiago M. Mola, Ingmar Vanhassel, Markus Rothe
    case $(exhost --build) in
        x86_64-pc-linux-gnu)
            ld_suffix="-x86-64"
        ;;
        i686-pc-linux-gnu)
            ld_suffix=""
        ;;
        *)
            die "Host not supported"
        ;;
    esac
    edo patchelf --set-interpreter "/usr/$(exhost --build)/lib/ld-linux${ld_suffix}.so.2" \
                 "${WORKBASE}/rust-stage0/bin/rustc"


    default
}

# Rust's configure script rejects every standard option
rust_src_configure() {
    local target=$(exhost --target)
    local channel=stable

    if option dev-channel; then
        channel=dev
    fi

    edo ./configure                   \
        --target=${target/pc/unknown} \
        --prefix=/usr/${target}       \
        --datadir=/usr/share          \
        --mandir=/usr/share/man       \
        --default-linker=${CC}        \
        --default-ar=${AR}            \
        --release-channel=${channel}  \
        --disable-llvm-assertions     \
        $(option_enable doc docs)     \
        --llvm-root=/usr/$(exhost --target) \
        --enable-local-rust \
        --local-rust-root="${WORKBASE}/rust-stage0/"
}

rust_src_compile() {
    emake VERBOSE=1
}

rust_src_install() {
    default
    edo mv "${IMAGE}"/usr/$(exhost --target)/share/doc/${PN}/* "${IMAGE}"/usr/share/doc/${PNVR}
    edo rmdir "${IMAGE}"/usr/$(exhost --target)/share{/doc{/${PN},},}
}
