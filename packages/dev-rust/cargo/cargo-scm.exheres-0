# Copyright 2016 Christopher Schwaab
# Distributed under the terms of the GNU General Public License v2

require github [ user=rust-lang ]

SCM_EXTERNAL_REFS="src/rust-installer:"

SUMMARY="Rust's package manager that allows projects to declare their various dependencies, and ensures repeatable builds."
HOMEPAGE="http://crates.io/"

LICENCES="|| ( MIT Apache-2.0 )"
SLOT="0"
PLATFORMS="~x86 ~amd64"
MYOPTIONS="
    bootstrap
"

DEPENDENCIES="
    build:
        sys-devel/cmake
        bootstrap? ( dev-util/patchelf )
    build+run:
        net-misc/curl
        dev-libs/openssl
        dev-lang/python
        dev-lang/rust
"

# TODO: I don't know how to tell what our current build arch is outside of
# something crazy like src_fetch_extra so just fetch every possible arch.
DOWNLOADS="
    https://static.rust-lang.org/cargo-dist/cargo-nightly-x86_64-unknown-linux-gnu.tar.gz
    https://static.rust-lang.org/cargo-dist/cargo-nightly-i686-unknown-linux-gnu.tar.gz
"

DEFAULT_SRC_COMPILE_PARAMS=( VERBOSE=1 )

src_unpack() {
    default_src_unpack
    scm_src_unpack
}

src_prepare() {
    local build=$(exhost --build)
    local ld_suffix=${build%%-*}
    export CARGO_BIN="${WORKBASE}/cargo-nightly-${ld_suffix}-unknown-linux-gnu/cargo/bin/cargo"
    edo patchelf \
      --set-interpreter "/lib/ld-linux-${ld_suffix/_/-}.so.2" \
      "$CARGO_BIN"
}

src_configure() {
    local host_param=$(exhost --target)
    local build_param=$(exhost --build)
    econf \
      --hates=host \
      --hates=build \
      --hates=bindir \
      --hates=sbindir \
      --hates=datarootdir \
      --hates=docdir \
      --hates=disable-dependency-tracking \
      --hates=disable-silent-rules \
      --hates=enable-fast-install \
      --host=${host_param/pc/unknown} \
      --build=${build_param/pc/unknown} \
      --local-rust-root="/usr/$(exhost --build)" \
      --local-cargo=$(option bootstrap "$CARGO_BIN" "/usr/$(exhost --build)")
}

src_compile() {
    export VERBOSE=1
    esandbox disable_net
    default_src_compile
    esandbox enable_net
}
